name: CI

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Check if Docker image exists on Docker Hub
        id: check-image
        run: |
          IMAGE_NAME="mo-digitalsign"
          IMAGE_TAG="latest"

          response=$(curl -s -o /dev/null -w "%{http_code}" https://hub.docker.com/v2/repositories/${IMAGE_NAME})
          echo "HTTP Status Code: $response"

          if [ $response -eq 200 ]; then
            echo "image_exists=true" >> $GITHUB_ENV
          else
            echo "image_exists=false" >> $GITHUB_ENV
          fi

        env:
          IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/mo-digitalsign
          IMAGE_TAG: latest
          IMAGE_EXISTS: env.IMAGE_EXISTS

      - name: Log in to Docker Hub (if using a private registry)
        if: env.IMAGE_EXISTS == 'false'
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build and push Docker image
        if: env.IMAGE_EXISTS == 'false'
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/mo-digitalsign:${{ github.sha }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/mo-digitalsign:${{ github.sha }}

      - name: Stop and remove containers using the old image
        run: |
          docker ps -a | grep mo-digitalsign | awk '{print $1}' | xargs -I {} docker stop {}
          docker ps -a | grep mo-digitalsign | awk '{print $1}' | xargs -I {} docker rm {}

      - name: Run containers with the updated image
        run: docker run -d --name mo-digitalsign ${{ secrets.DOCKER_USERNAME }}/mo-digitalsign:${{ github.sha }}